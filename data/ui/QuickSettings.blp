using Gtk 4.0;
using Adw 1;
using AstalWp 0.1;
using AstalNetwork 0.1;
using AstalBluetooth 0.1;
using AstalNotifd 0.1;

template $QuickSettings: Window {
    styles [
        "quick_settings_window"
    ]

    Revealer {
        transition-duration: 300;
        transition-type: slide_up;
        reveal-child: bind template.visible;

        Grid {
            styles [
                "quick_settings_grid"
            ]

            column-homogeneous: true;
            column-spacing: 10;
            row-spacing: 10;

            Box {
                hexpand: true;
                vexpand: true;
                homogeneous: true;

                layout {
                    row: 0;
                    column: 0;
                }

                styles [
                    "quick_settings_grid_box"
                ]

                Image {
                    file: "/home/archkye/user.png";
                    halign: center;
                    valign: center;
                    hexpand: true;
                    vexpand: true;
                    pixel-size: 100;
                }
            }

            // Calendar Grid (1:1)
            Gtk.Calendar {
                layout {
                    row: 1;
                    column: 0;
                }

                hexpand: true;
                vexpand: true;

                styles [
                    "quick_settings_grid_box"
                ]
            }

            // Volume Slider (Box)
            Gtk.Box {
                layout {
                    row: 2;
                    column: 0;
                    row-span: 1;
                }

                hexpand: true;
                vexpand: true;

                Image {
                    icon-name: bind template.speaker as <AstalWp.Endpoint>.volume-icon;
                }

                Scale {
                    hexpand: true;

                    adjustment: Adjustment vol_adjust {
                        lower: 0;
                        upper: 1;
                    };

                    styles [
                        "morghulis_slider"
                    ]
                }

                Label {
                    label: bind $current_volume(template.speaker as <AstalWp.Endpoint>.volume) as <string>;
                    width-request: 50;
                }

                styles [
                    "quick_settings_grid_box"
                ]
            }

            Grid {
                layout {
                    row: 0;
                    column: 1;
                    row-span: 3; // Increased to cover all rows
                }

                hexpand: true;
                vexpand: true;
                column-spacing: 5;
                row-spacing: 5;
                // Grid for QuickSettingsButtons
                Grid quick_settings_buttons {
                    layout {
                        row: 0;
                        column: 0;
                        row-span: 3; // Covers the first 3 rows
                    }

                    hexpand: true;
                    vexpand: true;
                    column-spacing: 5;
                    row-spacing: 5;

                    styles [
                        "quick_settings_grid_box"
                    ]

                    $QuickSettingsButton {
                        clicked => $network_clicked();
                        icon: bind template.network as <AstalNetwork.Network>.wifi as <AstalNetwork.Wifi>.icon-name;
                        active: bind template.network as <AstalNetwork.Network>.wifi as <AstalNetwork.Wifi>.enabled;

                        layout {
                            row: 0;
                            column: 0;
                        }
                    }

                    $QuickSettingsButton {
                        icon: bind $active_vpn(template.network) as <string>;
                        clicked => $toggle_vpn();

                        layout {
                            row: 1;
                            column: 0;
                        }
                    }

                    $QuickSettingsButton {
                        icon: bind $bluetooth_icon_name(template.bluetooth as <AstalBluetooth.Bluetooth>.is-powered) as <string>;
                        active: bind template.bluetooth as <AstalBluetooth.Bluetooth>.is-powered;
                        clicked => $bluetooth_clicked();
                        clicked_extras => $bluetooth_clicked_extras();

                        layout {
                            row: 0;
                            column: 1;
                        }
                    }

                    $QuickSettingsButton {
                        layout {
                            row: 1;
                            column: 1;
                        }
                    }

                    $QuickSettingsButton {
                        layout {
                            row: 2;
                            column: 0;
                        }

                        icon: bind $dont_disturb_icon(template.notifd as <AstalNotifd.Notifd>.dont-disturb) as <string>;
                        inactive: bind template.notifd as <AstalNotifd.Notifd>.dont-disturb;
                        clicked => $toggle_disturb();
                        clicked_extras => $on_notif_arrow_clicked();
                    }
                }

                // Grid for Carousel
                Grid carousel_grid {
                    layout {
                        row: 3;
                        column: 0;
                    }

                    hexpand: true;
                    vexpand: true;

                    styles [
                        "quick_settings_grid_box"
                    ]

                    Adw.Carousel players {
                        layout {
                            row: 0;
                            column: 0;
                        }

                        orientation: vertical;
                        spacing: 5;
                        hexpand: true;
                        vexpand: true;
                    }

                    Adw.CarouselIndicatorDots {
                        carousel: players;

                        layout {
                            row: 1;
                            column: 0;
                        }
                    }
                }
            }

            // Power Menu Info
            Gtk.Box {
                layout {
                    row: 4;
                    column: 0;
                    column-span: 2;
                }

                hexpand: true;

                styles [
                    "quick_settings_grid_box"
                ]

                Label uptime_label {}

                Box {
                    hexpand: true;
                    spacing: 5;
                    halign: end;

                    Button {
                        icon-name: "system-shutdown-symbolic";
                        tooltip-text: "Shutdown";
                        clicked => $shutdown();
                    }

                    Button {
                        icon-name: "system-reboot-symbolic";
                        tooltip-text: "Reboot";
                        clicked => $reboot();
                    }

                    Button {
                        icon-name: "system-suspend-symbolic";
                        tooltip-text: "Suspend";
                        clicked => $suspend();
                    }

                    Button {
                        icon-name: "system-hibernate-symbolic";
                        tooltip-text: "Hibernate";
                        clicked => $hibernate();
                    }

                    Button {
                        icon-name: "system-lock-screen-symbolic";
                        tooltip-text: "Lock";
                        clicked => $lock();
                    }
                }
            }
        }
    }
}
